apply from: "$rootDir/android-library.gradle"
apply plugin: 'kotlin-parcelize'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.vanniktech.maven.publish'
apply from: 'jacoco.gradle'
apply from: 'sonar.gradle'
apply from: "secrets.gradle"
apply from: 'version.gradle'

android {
    namespace 'com.meshconnect.link'

    defaultConfig {
        buildConfigField "String", "VERSION", "\"$publishVersion\""
    }
    // see https://googlesamples.github.io/android-custom-lint-rules/user-guide.md.html#lintgradleplugindsl
    // and https://googlesamples.github.io/android-custom-lint-rules/user-guide.md.html#performancetuning
    lint {
        abortOnError true
        ignoreTestSources true
        warningsAsErrors true
    }
    kotlinOptions {
        freeCompilerArgs += [
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
        ]
    }
    buildFeatures {
        buildConfig = true
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.androidx.security.crypto
    implementation libs.google.material
    implementation libs.google.gson
    implementation libs.kotlinx.coroutines.core

    testImplementation libs.junit
    testImplementation libs.io.mockk
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.kluent
    testImplementation libs.androidx.core.testing

    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.kluent
}

import com.vanniktech.maven.publish.AndroidSingleVariantLibrary
import com.vanniktech.maven.publish.SonatypeHost

mavenPublishing {
    // the first parameter represents which variant is published
    // the second whether to publish a sources jar
    // the third whether to publish a javadoc jar
    configure(new AndroidSingleVariantLibrary('release', true, true))
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL, false)
    signAllPublications()

    coordinates('com.meshconnect', 'link', publishVersion)

    pom {
        name = 'Mesh Connect Android SDK'
        description = 'Android library for integrating with Mesh Connect'
        url = 'https://github.com/FrontFin/mesh-android-sdk'

        scm {
            url = 'https://github.com/FrontFin/mesh-android-sdk'
            connection = 'scm:git:git://github.com/FrontFin/mesh-android-sdk.git'
            developerConnection = 'scm:git:ssh://git@github.com/FrontFin/mesh-android-sdk.git'
            tag = 'git rev-parse --verify HEAD'.execute().text.trim() // commit hash
        }
        licenses {
            license {
                name = 'MIT License'
                url = 'https://opensource.org/licenses/MIT'
            }
        }
        developers {
            developer {
                id = 'meshconnect'
                name = 'Mesh Connect, Inc'
                url = 'https://github.com/FrontFin'
            }
        }
    }
}

